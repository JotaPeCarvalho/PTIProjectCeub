// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebProjectPTI.Data;

#nullable disable

namespace WebProjectPTI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230704171833_removingContract")]
    partial class removingContract
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebProjectPTI.Models.Aluno", b =>
                {
                    b.Property<int>("Id_Aluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Aluno"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nrCpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nmEmail");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dtNascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<DateTime>("Pagamento")
                        .HasColumnType("datetime2")
                        .HasColumnName("dtPagamento");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Profissao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nmProfissao");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nrTelefone");

                    b.HasKey("Id_Aluno");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("WebProjectPTI.Models.Aula", b =>
                {
                    b.Property<int>("Id_Aula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Aula"));

                    b.Property<DateTime>("DataMesAula")
                        .HasColumnType("datetime2")
                        .HasColumnName("dataMesAula");

                    b.Property<int>("DiaSemanaAula")
                        .HasColumnType("int")
                        .HasColumnName("diaSemanaAula");

                    b.Property<DateTime>("HoraAula")
                        .HasColumnType("datetime2")
                        .HasColumnName("horaAula");

                    b.Property<int>("Id_Aluno")
                        .HasColumnType("int");

                    b.Property<int>("Id_Professor")
                        .HasColumnType("int");

                    b.HasKey("Id_Aula");

                    b.HasIndex("Id_Aluno");

                    b.HasIndex("Id_Professor");

                    b.ToTable("Aula");
                });

            modelBuilder.Entity("WebProjectPTI.Models.Professor", b =>
                {
                    b.Property<int>("Id_Professor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Professor"));

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nrCpf");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Login");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Senha");

                    b.HasKey("Id_Professor");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("WebProjectPTI.Models.Aluno", b =>
                {
                    b.HasOne("WebProjectPTI.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("WebProjectPTI.Models.Aula", b =>
                {
                    b.HasOne("WebProjectPTI.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("Id_Aluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebProjectPTI.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("Id_Professor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });
#pragma warning restore 612, 618
        }
    }
}
